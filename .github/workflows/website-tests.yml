name: Website tests
on:
  push:
    branches-ignore:
      - 'master'
    paths:
      - 'website/**'
      - '.github/workflows/website-tests.yml'
      - 'package.json'
      - 'package-lock.json'
  repository_dispatch: {}
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      if: github.event_name != 'repository_dispatch'
      uses: actions/checkout@v1
    - name: Check out repository (external dispatch)
      if: github.event_name == 'repository_dispatch'
      uses: actions/checkout@v1
      with:
        # Always build and run external dispatch tests on 'master' branch
        ref: master
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: Install packages
      run: |
        npm ci
        $(npm bin)/cypress verify
      working-directory: ./website
      env:
        CI: true
    - name: Run tests
      run: |
        export PERCY_BRANCH="${GITHUB_REF#refs/heads/}"
        export PERCY_COMMIT="$GITHUB_SHA"
        npm run test:ci
      working-directory: ./website
      env:
        CI: true
        GATSBY_FIREBASE_API_KEY: ${{ secrets.GATSBY_FIREBASE_API_KEY }}
        GATSBY_FIREBASE_AUTH_DOMAIN: ${{ secrets.GATSBY_FIREBASE_AUTH_DOMAIN }}
        GATSBY_FIREBASE_PROJECT_ID: ${{ secrets.GATSBY_FIREBASE_PROJECT_ID }}
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        CYPRESS_SEED_URL: ${{ secrets.CLOUD_FUNCTIONS_URL }}/seedInvitations
    - name: Publish deploy (for external trigger)
      if: startsWith(github.event.action, 'externalUrl_')
      run: |
        export DEPLOY_ID="${ACTION#externalUrl_}"
        echo "Publishing deploy ID ${DEPLOY_ID}..."
        curl -X POST -d {} https://api.netlify.com/api/v1/sites/${SITE_ID}/deploys/${DEPLOY_ID}/restore?access_token=${ACCESS_TOKEN}
      env:
        CI: true
        ACTION: ${{ github.event.action }}
        SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        ACCESS_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
    - name: Deploy to Netlify (staging)
      if: github.ref == 'refs/heads/staging'
      run: |
        echo "Triggering build via ${NETLIFY_BUILD_HOOK_URL}..."
        curl -X POST -d {} $NETLIFY_BUILD_HOOK_URL
      env:
        NETLIFY_BUILD_HOOK_URL: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}
    - name: Archive Cypress videos
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: videos
        path: website/cypress/videos
